@page "/jobsearch"
@using TalentLink.Frontend.Models
@inject HttpClient HttpClient
@inject NavigationManager Navi
@inject TalentLink.Frontend.Services.AuthenticationService AuthService

<h3 class="text-center">Job Search</h3>

<div class="text-center">
    <label>Wähle eine Kategorie:</label>
    <select @onchange="OnCategoryChanged">
        <option value="">Alle Kategorien</option>
        @if (categories == null || !categories.Any())
        {
            <option disabled>Keine Kategorien verfügbar</option>
        }
        else
        {
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        }
    </select>
</div>
<div class="job-divider my-4"></div>


@if (isLoading)
{
    <p>Loading...</p>
}
else if (jobs == null || !jobs.Any())
{
    <p>keine Jobs gefunden.</p>
}
else
{

    <div class="container py-5">
        <div class="row g-4">
        <h1 class="text-center mb-5">Jobs</h1>
            @foreach (var job in jobs)
            {
                <div class="col-12 col-md-6 col-lg-4">
                    <div class="card job-card h-100">
                        <div class="card-img-container">
                            <img src="@job.CategoryImage" alt="@job.Category">
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="job-title">
                                @job.Title
                                @if (job.IsBoosted)
                                {
                                    <span class="badge bg-warning text-dark ms-2">Hevorgehoben</span>
                                }
                            </h5>
                            <p class="job-category">@job.Category</p>
                            <p class="job-date mb-3">Erstellt: @job.CreatedAt.ToString("dd.MM.yyyy")</p>
                            <span class=""><button class="btn btn-primary" @onclick="() => ApplyTo(job.Id)">Bewirb dich!</button></span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
   
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">Error: @errorMessage</p>
}

@* modal for not verified students *@
@if (showNotAuthenticatedModal)
{
    <div class="modal-blur-backdrop"></div>
    <div class="modal show d-block custom-modal-center" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bewerbung nicht möglich</h5>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">@notAuthenticatedMessage</div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" @onclick="CloseNotAuthenticatedModal">OK</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private void CloseNotAuthenticatedModal()
    {
        showNotAuthenticatedModal = false;
        notAuthenticatedMessage = string.Empty;
    }
}
