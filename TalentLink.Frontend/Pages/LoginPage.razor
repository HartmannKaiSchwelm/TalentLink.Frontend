@page "/login"
@using TalentLink.Frontend.Models

@inject HttpClient HttpClient
@inject NavigationManager Navi
@inject TalentLink.Frontend.Services.AuthenticationService AuthService


<div class="register-container">
    <div class="register-card">
        <div class="register-title">Login</div>
        <form @onsubmit="LoginUser">
            <div class="form-row">
                <label for="email">EMail</label>
                <input id="email" class="input-group-sm" @bind="login.Email" type="email" required />
            </div>
            <div class="form-row">
                <label for="password">Password</label>
                <input id="password" class="input-group-sm" @bind="login.Password" type="password" required />
            </div>
            <button class="btn btn-outline-primary" type="submit">Login</button>
        </form>
        <!-- Failed Message-->
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="register-message">@message</div>
        }
    </div>
</div>

@code {
    private LoginDto login = new LoginDto();
    private string? message;

    private async Task LoginUser()
    {
        var response = await HttpClient.PostAsJsonAsync("https://localhost:7024/api/auth/login", login);
        if (response.IsSuccessStatusCode)
        {
            var auth = await response.Content.ReadFromJsonAsync<AuthResponseDto>();
            if (auth is not null)
            {
                AuthService.SetAuth(auth.Token, auth.Name);
            }
            Navi.NavigateTo("/profile");
        }
        else
        {
            message = "Login failed."; 
        }
    }
}
